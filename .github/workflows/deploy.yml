name: ci

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Start backend for build
        env:
          AT_SECRET: ${{ secrets.AT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          FRONTEND_HOME_URI: ${{ secrets.FRONTEND_HOME_URI }}
          FRONTEND_IMPORT_PAGE_URI: ${{ secrets.FRONTEND_IMPORT_PAGE_URI }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
          ORIGINS: ${{ secrets.ORIGINS }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          RT_SECRET: ${{ secrets.RT_SECRET }}
          X_API_KEY: ${{ secrets.X_API_KEY }}
        run: |
          RUNNER_TRACKING_ID="" docker compose -f docker-compose.yml up -d
          echo "Waiting for backend to initialize..."
          sleep 60s
          curl -X GET http://localhost:8000/api
          
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/sc-kpi:latest
          build-args: |
            NEXT_PUBLIC_API_KEY=${{ vars.NEXT_PUBLIC_API_KEY }}
            NEXT_PUBLIC_API_BASE_URL=${{ vars.NEXT_PUBLIC_API_BASE_URL }}
            NEXT_PUBLIC_CAMPUS_API_BASE_URL=${{ vars.NEXT_PUBLIC_CAMPUS_API_BASE_URL }}
            NEXT_PUBLIC_TINYMCE_API_KEY=${{ vars.NEXT_PUBLIC_TINYMCE_API_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Stop and remove containers
        run: |
          docker compose -f docker-compose.yml down
